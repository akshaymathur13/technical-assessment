{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\assessment\\\\dynamic-form-generator\\\\src\\\\components\\\\FormPreview.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormPreview = ({\n  schema\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  if (!(schema !== null && schema !== void 0 && schema.fields)) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Invalid schema\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 31\n  }, this);\n  const onSubmit = data => console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"p-4 bg-white dark:bg-gray-800 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-lg font-bold\",\n      children: schema.formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: schema.formDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), schema.fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 font-semibold\",\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), field.type === \"text\" || field.type === \"email\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        ...register(field.id, {\n          required: field.required\n        }),\n        placeholder: field.placeholder,\n        className: \"w-full p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this) : field.type === \"textarea\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ...register(field.id, {\n          required: field.required\n        }),\n        placeholder: field.placeholder,\n        className: \"w-full p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) : field.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n        ...register(field.id, {\n          required: field.required\n        }),\n        className: \"w-full p-2 border rounded\",\n        children: field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : null, errors[field.id] && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"p-2 bg-blue-500 text-white rounded\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(FormPreview, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = FormPreview;\nexport default FormPreview;\nvar _c;\n$RefreshReg$(_c, \"FormPreview\");","map":{"version":3,"names":["React","useForm","jsxDEV","_jsxDEV","FormPreview","schema","_s","register","handleSubmit","formState","errors","fields","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","data","console","log","className","formTitle","formDescription","map","field","label","type","id","required","placeholder","options","option","value","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/assessment/dynamic-form-generator/src/components/FormPreview.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\ninterface Props {\r\n  schema: any;\r\n}\r\n\r\nconst FormPreview: React.FC<Props> = ({ schema }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  if (!schema?.fields) return <p>Invalid schema</p>;\r\n\r\n  const onSubmit = (data: any) => console.log(data);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      className=\"p-4 bg-white dark:bg-gray-800 rounded-lg\"\r\n    >\r\n      <h1 className=\"text-lg font-bold\">{schema.formTitle}</h1>\r\n      <p>{schema.formDescription}</p>\r\n      {schema.fields.map((field: any) => (\r\n        <div key={field.id} className=\"my-4\">\r\n          <label className=\"block mb-2 font-semibold\">{field.label}</label>\r\n          {field.type === \"text\" || field.type === \"email\" ? (\r\n            <input\r\n              type={field.type}\r\n              {...register(field.id, { required: field.required })}\r\n              placeholder={field.placeholder}\r\n              className=\"w-full p-2 border rounded\"\r\n            />\r\n          ) : field.type === \"textarea\" ? (\r\n            <textarea\r\n              {...register(field.id, { required: field.required })}\r\n              placeholder={field.placeholder}\r\n              className=\"w-full p-2 border rounded\"\r\n            />\r\n          ) : field.type === \"select\" ? (\r\n            <select\r\n              {...register(field.id, { required: field.required })}\r\n              className=\"w-full p-2 border rounded\"\r\n            >\r\n              {field.options.map((option: any) => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          ) : null}\r\n          {errors[field.id] && (\r\n            <p className=\"text-red-500\">This field is required</p>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <button type=\"submit\" className=\"p-2 bg-blue-500 text-white rounded\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormPreview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}